# Generated by Django 2.2 on 2020-08-12 09:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Doc',
            fields=[
                ('did', models.AutoField(primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('isdeleted', models.IntegerField(default=0)),
                ('modify_time', models.DateTimeField(auto_now_add=True)),
                ('modify_num', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'Doc',
            },
        ),
        migrations.CreateModel(
            name='DocContent',
            fields=[
                ('did', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
            ],
            options={
                'db_table': 'Doc_content',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('member_num', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'Team',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('uid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('password', models.CharField(max_length=200)),
                ('tel', models.CharField(max_length=200, null=True, unique=True)),
                ('mail', models.CharField(max_length=200, null=True, unique=True)),
                ('description', models.CharField(max_length=200, null=True)),
                ('profile', models.ImageField(null=True, upload_to='')),
            ],
            options={
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('join_time', models.DateTimeField(auto_now=True)),
                ('role', models.IntegerField(default=0)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_member', to='App.User')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_member', to='App.Team')),
            ],
            options={
                'db_table': 'TeamMember',
            },
        ),
        migrations.AddField(
            model_name='team',
            name='creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='App.User'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('content', models.CharField(max_length=500)),
                ('mode', models.IntegerField(default=0)),
                ('is_read', models.BooleanField(default=False)),
                ('doc', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='App.Doc')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='App.User')),
                ('team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='App.Team')),
            ],
            options={
                'db_table': 'Message',
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('fid', models.AutoField(primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('did', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='App.Doc')),
                ('uid', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to='App.User')),
            ],
            options={
                'db_table': 'Favorite',
            },
        ),
        migrations.CreateModel(
            name='DocTemplate',
            fields=[
                ('tid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('picture', models.ImageField(null=True, upload_to='')),
                ('content', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='temp_header', to='App.DocContent')),
            ],
            options={
                'db_table': 'Doc_template',
            },
        ),
        migrations.CreateModel(
            name='DocPower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.IntegerField(default=0)),
                ('is_commented', models.BooleanField(default=False)),
                ('doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='DocPower', to='App.Doc')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='DocPower', to='App.User')),
            ],
            options={
                'db_table': 'DocPower',
            },
        ),
        migrations.AddField(
            model_name='doc',
            name='content',
            field=models.OneToOneField(default='', on_delete=django.db.models.deletion.CASCADE, related_name='doc_header', to='App.DocContent'),
        ),
        migrations.AddField(
            model_name='doc',
            name='creator',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='App.User'),
        ),
        migrations.AddField(
            model_name='doc',
            name='modify_people',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='docs', to='App.User'),
        ),
        migrations.AddField(
            model_name='doc',
            name='team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='docs', to='App.Team'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500)),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('modify_time', models.DateTimeField(auto_now=True)),
                ('star', models.IntegerField(default=0)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='App.User')),
                ('doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment', to='App.Doc')),
            ],
            options={
                'db_table': 'Comment',
            },
        ),
        migrations.CreateModel(
            name='Browse',
            fields=[
                ('bid', models.AutoField(primary_key=True, serialize=False)),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('did', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='browses', to='App.Doc')),
                ('uid', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='browses', to='App.User')),
            ],
            options={
                'db_table': 'Browse',
            },
        ),
    ]
